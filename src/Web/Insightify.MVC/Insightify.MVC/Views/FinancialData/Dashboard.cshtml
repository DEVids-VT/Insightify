@using Insightify.Framework.Pagination;
@using Insightify.MVC.Models.FinancialData;
@using Insightify.Web.Gateway.Models.FinancialData;
@using System.Text;
@model DashboardModel

<div class="flexbox">
    <section class="single-cards">
        @{
            foreach (var item in Model.Currencies)
            {
                <div class="crypto-card card">
                    <div class="top-area">
                        <div class="image-container">
                            <img src="@item.Image" />
                        </div>
                        <button>Details</button>
                    </div>
                    <div class="bottom-area">
                        <h5>@item.Name</h5>
                        <div class="price-holder">
                            <h4>@item.CurrentPrice</h4>
                            <h7>@item.PriceChange</h7>
                        </div>
                    </div>
                </div>
            }
        }
    </section>
    <section class="chart-cards">
        <section class="price-cards">
            <div id="price-card" class="price-card card">
            </div>
            <div id="change-card" class="change-card card">
            </div>
        </section>
        <section class="market-cards">
            <div id="status-card" class="status-card card">
            </div>
            <div id="analytics-card" class="analytics-card card">
            </div>
        </section>
    </section>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
    @{
        var jsonDataPrices = Newtonsoft.Json.JsonConvert.SerializeObject(
        Model.ChartData.Prices.Select(item => new
        {
            time = DateTimeOffset.FromUnixTimeSeconds(item.Timestamp).DateTime.ToString("yyyy-MM-dd"),
            value = item.Value
        }));
        var jsonDataMarket = Newtonsoft.Json.JsonConvert.SerializeObject(
        Model.ChartData.MarketCaps.Select(item => new
        {
            time = DateTimeOffset.FromUnixTimeSeconds(item.Timestamp).DateTime.ToString("yyyy-MM-dd"),
            value = item.Value
        }));
        var jsonDataTotalVolumes = Newtonsoft.Json.JsonConvert.SerializeObject(
        Model.ChartData.TotalVolumes.Select(item => new
        {
            time = DateTimeOffset.FromUnixTimeSeconds(item.Timestamp).DateTime.ToString("yyyy-MM-dd"),
            value = item.Value
        }));

    }
        var dataPrices = @Html.Raw(jsonDataPrices);
        var dataTotalVolumes = @Html.Raw(jsonDataTotalVolumes);
        var dataMarket = @Html.Raw(jsonDataMarket);
        createChat(dataPrices, 'price-card', 'Light', '400', '800');
        createChat(dataTotalVolumes, 'change-card', 'Light', '400', '800');
        createChat(dataMarket, 'status-card', 'Light', '400', '800');
        createChat(dataPrices, 'analytics-card', 'Light', '400', '800');
    });


</script>
